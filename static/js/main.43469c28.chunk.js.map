{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","handleSubmit","event","preventDefault","addMovie","props","setState","this","onSubmit","type","value","onChange","target","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"0wEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,ICvBH,IAAMK,EAAb,4MACEC,MAAQ,CACNhB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,IANZ,EASEG,aAAe,SAACC,GACdA,EAAMC,kBAINC,EAFqB,EAAKC,MAAlBD,UAEC,EAAKJ,OACd,EAAKM,SAAS,CACZtB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,MApBd,4CAwBE,WAAU,IAAD,OACP,EAMIS,KAAKP,MALPhB,EADF,EACEA,MACAC,EAFF,EAEEA,YACAC,EAHF,EAGEA,OACAY,EAJF,EAIEA,OACAX,EALF,EAKEA,QAGF,OACE,0BAAMqB,SAAUD,KAAKN,cACnB,2BACE,+BACG,UACD,2BACEQ,KAAK,OACLC,MAAO1B,EACP2B,SAAU,SAACT,GACT,EAAKI,SAAS,CAAEtB,MAAOkB,EAAMU,OAAOF,aAK5C,2BACE,+BACG,gBACD,2BACED,KAAK,OACLC,MAAOzB,EACP0B,SAAU,SAACT,GACT,EAAKI,SAAS,CAAErB,YAAaiB,EAAMU,OAAOF,aAKlD,2BACE,+BACG,WACD,2BACED,KAAK,OACLC,MAAOxB,EACPyB,SAAU,SAACT,GACT,EAAKI,SAAS,CAAEpB,OAAQgB,EAAMU,OAAOF,aAK7C,2BACE,+BACG,YACD,2BACED,KAAK,OACLC,MAAOvB,EACPwB,SAAU,SAACT,GACT,EAAKI,SAAS,CAAEnB,QAASe,EAAMU,OAAOF,aAK9C,2BACE,+BACG,WACD,2BACED,KAAK,OACLC,MAAOZ,EACPa,SAAU,SAACT,GACT,EAAKI,SAAS,CAAER,OAAQI,EAAMU,OAAOF,aAK7C,4BAAQD,KAAK,UAAb,kBA/FR,GAA8BI,a,OCGjBC,EAAb,4MACEd,MAAQ,CACNN,OAAQqB,GAFZ,EAKEX,SAAW,SAACR,GACV,EAAKU,UAAS,SAAAN,GAAK,MAAK,CACtBN,OAAO,GAAD,mBAAMM,EAAMN,QAAZ,CAAoBE,SAPhC,4CAWE,WACE,IAAQF,EAAWa,KAAKP,MAAhBN,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CAAUgB,SAAUG,KAAKH,iBApBnC,GAAyBS,aCDzBG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.43469c28.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { addMovie } = this.props;\n\n    addMovie(this.state);\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbId,\n      imdbUrl,\n    } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <p>\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              value={title}\n              onChange={(event) => {\n                this.setState({ title: event.target.value });\n              }}\n            />\n          </label>\n        </p>\n        <p>\n          <label>\n            {'Description: '}\n            <input\n              type=\"text\"\n              value={description}\n              onChange={(event) => {\n                this.setState({ description: event.target.value });\n              }}\n            />\n          </label>\n        </p>\n        <p>\n          <label>\n            {'imgUrl: '}\n            <input\n              type=\"text\"\n              value={imgUrl}\n              onChange={(event) => {\n                this.setState({ imgUrl: event.target.value });\n              }}\n            />\n          </label>\n        </p>\n        <p>\n          <label>\n            {'imdbUrl: '}\n            <input\n              type=\"text\"\n              value={imdbUrl}\n              onChange={(event) => {\n                this.setState({ imdbUrl: event.target.value });\n              }}\n            />\n          </label>\n        </p>\n        <p>\n          <label>\n            {'imdbId: '}\n            <input\n              type=\"text\"\n              value={imdbId}\n              onChange={(event) => {\n                this.setState({ imdbId: event.target.value });\n              }}\n            />\n          </label>\n        </p>\n        <button type=\"submit\">Add movie</button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}